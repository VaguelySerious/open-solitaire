var Sol={settings:{maxGameStates:1,progressiveUndo:1,cycleTimes:2},scoring:{pileToTableau:5,tableauToFoundation:10,undo:-10,foundationToTableau:-15,uncoverFaceDown:5},gamedata:{colors:["hearts","diamonds","clubs","spades"],stacks:[[],[],[],[],[],[],[],[],[],[],[],[],[]],gameStates:[]},stats:{score:0,gameTime:0,bestTime:9999999,bestScore:0,timerStarted:!1,timerInterval:null,scoreNode:null,timerNode:null},cardstate:{toDeleteCard:null,toDeleteLastCard:null,lastCard:null,autoCompletable:!1,possibleMove:!0},dom:{},cardColors:["royalblue","plum","brickred","red","orange","yellow","green","emerald","mint","aqua"]};function cardFromNumber(a){(null==a||isNaN(a))&&alert("cardFromNumber(null) was called");var t=[];classNames=["card card--"+Sol.gamedata.colors[Math.floor(a%52/13)]+" card--"+a%13+(a<52?"":" card--back"),"card__front","card__color","card__color","card__back"];for(var e=0;e<classNames.length;e++)t.push(document.createElement("div")),t[e].className+=classNames[e],0!=e&&t[2==e||3==e?1:0].appendChild(t[e]);return t[0]}function numFromCard(a){var t=a.className.split(" "),e=13*Sol.gamedata.colors.indexOf(t[1].slice(6));return e+=+t[2].slice(6),"card--back"===t[3]&&(e+=52),e}function findCardPos(a){if(null==a)return null;for(var t=numFromCard(a),e=0;e<Sol.gamedata.stacks.length;e++)for(var s=0;s<Sol.gamedata.stacks[e].length;s++)if(Sol.gamedata.stacks[e][s]===t)return[e,s,t];return alert("ERROR: Card can't be found in any stack."),null}function deckCycle(){return moveElements(0,1,1,!0,!1),Sol.gamedata.stacks[0].length}function addElement(a,t,e,s){if(null==a||isNaN(a))return null;(e|=!1)&&(52<=a?a-=52:a+=52),(s|=!1)?(Sol.gamedata.stacks[t].unshift(a),document.getElementById("stack"+t).prepend(cardFromNumber(a))):(Sol.gamedata.stacks[t].push(a),document.getElementById("stack"+t).append(cardFromNumber(a)))}function removeElement(a){if(null!=a){if(children=document.getElementById("stack"+a).childNodes,0==children.length)return null;children[children.length-1].outerHTML=""}return Sol.gamedata.stacks[a].pop()}function moveElements(a,t,e,s,o){s|=!1,o|=!1;for(var l=[],n=0;n<e;n++)l.push(removeElement(a));for(var r=l.length-1;0<=r;r--)addElement(l[r],t,s,o);1<a&&a<6?Sol.stats.score+=Sol.scoring.foundationToTableau:1<t&&t<6?Sol.stats.score+=Sol.scoring.tableauToFoundation:1===a&&5<t&&(Sol.stats.score+=Sol.scoring.pileToTableau),updateScore()}function cardInteraction(a){var t=findCardPos(a);if(numFromCard(a)==last(0))createGameState(),deckCycle(),null!=Sol.cardstate.lastCard&&forgetLastCard();else if(52<=numFromCard(a))null!=Sol.cardstate.lastCard&&forgetLastCard(),t[1]==Sol.gamedata.stacks[t[0]].length-1&&(createGameState(),Sol.gamedata.stacks[t[0]][t[1]]=numFromCard(a)-52,Sol.stats.score+=Sol.scoring.uncoverFaceDown,updateScore(),a.classList.toggle("card--back"));else if(null==Sol.cardstate.lastCard)a.classList.toggle("card--clicked"),Sol.cardstate.lastCard=a;else{var e=findCardPos(Sol.cardstate.lastCard),s=numFromCard(a),o=numFromCard(Sol.cardstate.lastCard);if(a.classList.toggle("card--clicked"),Sol.cardstate.lastCard!=a)(o%13+1==s%13&&(26<=s&&o<26||s<26&&26<=o)||o-1===s&&1<t[0]&&t[0]<6)&&2<=t[0]?(createGameState(),moveElements(e[0],t[0],Sol.gamedata.stacks[e[0]].length-e[1])):(Sol.cardstate.lastCard.classList.toggle("card--flash"),a.classList.toggle("card--flash"),setTimeout(function(){a.classList.toggle("card--flash"),Sol.cardstate.lastCard.classList.toggle("card--flash")},250));else for(var l=2;l<6;l++)if(last(l)===numFromCard(Sol.cardstate.lastCard)-1||0===Sol.gamedata.stacks[l].length&&numFromCard(Sol.cardstate.lastCard)%13==0){createGameState(),moveElements(e[0],l,1),1==e[0]&&(Sol.stats.score+=Sol.scoring.pileToTableau),updateScore();break}Sol.cardstate.toDeleteCard=a,Sol.cardstate.toDeleteLastCard=Sol.cardstate.lastCard,Sol.cardstate.lastCard=null,setTimeout(function(){Sol.cardstate.toDeleteCard.classList.toggle("card--clicked"),Sol.cardstate.toDeleteLastCard.classList.toggle("card--clicked")},500)}checkConditions()}function forgetLastCard(){Sol.cardstate.lastCard.classList.remove("card--clicked"),Sol.cardstate.lastCard=null}function handleEmptyFieldInteraction(a){var t=a.id.slice(5);if(null!=Sol.cardstate.lastCard&&0===Sol.gamedata.stacks[t].length&&1<t){var e=findCardPos(Sol.cardstate.lastCard);(5<t&&numFromCard(Sol.cardstate.lastCard)%13==12||numFromCard(Sol.cardstate.lastCard)%13==0)&&(createGameState(),moveElements(e[0],parseInt(t),Sol.gamedata.stacks[e[0]].length-e[1])),Sol.cardstate.lastCard.classList.toggle("card--clicked"),Sol.cardstate.lastCard=null}}function handleCycle(){if(0<Sol.settings.cycleTimes){createGameState(),temp=Sol.gamedata.stacks[1].length;for(var a=0;a<temp;a++)moveElements(1,0,1,!0,!1);Sol.settings.cycleTimes-=1,0==Sol.settings.cycleTimes&&document.getElementById("stack0").classList.toggle("deck__stock--cycle")}}function createGameState(){Sol.stats.timerStarted||(Sol.stats.timerStarted=!0,startTimer()),Sol.settings.progressiveUndo&&document.getElementsByClassName("controls__icon--undo")[0].classList.remove("invalid"),Sol.gamedata.gameStates.push([clone(Sol.gamedata.stacks),Sol.stats.score]),Sol.gamedata.gameStates.length>Sol.settings.maxGameStates&&Sol.gamedata.gameStates.shift()}function handleUndo(){if(Sol.settings.progressiveUndo||(Sol.settings.maxGameStates-=1),0<Sol.gamedata.gameStates.length){document.getElementsByClassName("controls__icon--undo")[0].classList.remove("invalid");var a=Sol.gamedata.gameStates.pop();Sol.gamedata.stacks=a[0],Sol.stats.score=a[1],clearDom(),rebaseDom(),Sol.stats.score+=Sol.scoring.undo,updateScore()}0==Sol.gamedata.gameStates.length&&document.getElementsByClassName("controls__icon--undo")[0].classList.add("invalid")}function checkConditions(){Sol.cardstate.possibleMove=!1;for(var a=6;a<Sol.gamedata.stacks.length&&!Sol.cardstate.possibleMove;a++)for(var t=6;t<Sol.gamedata.stacks.length&&!Sol.cardstate.possibleMove;t++)for(var e=0;e<Sol.gamedata.stacks[t].length;e++){if(info(last(a)).isFaceDown){console.log("Hint: Uncover face-down card on stack "+(a-5)),Sol.cardstate.possibleMove=!0;break}if(1<t-4&&t-4<6&&last(a)-1===last(t-4)||last(a)%13==0){console.log("Hint: Move card in column "+(a-5)+" to the foundation"),Sol.cardstate.possibleMove=!0;break}if(0==Sol.gamedata.stacks[a].length&&Sol.gamedata.stacks[t][e]%13==12){console.log("Hint: Move card from column "+(t-5)+" to column "+(a-5)),Sol.cardstate.possibleMove=!0;break}if(info(last(1)).value+1==info(last(a)).value&&info(last(1)).isBlack!=info(last(a)).isBlack){console.log("Hint: Move card from pile to column "+(a-5)),Sol.cardstate.possibleMove=!0;break}if(last(a)<52&&Sol.gamedata.stacks[t][e]<52&&a!=t&&info(last(a)).value-1===info(Sol.gamedata.stacks[t][e]).value&&info(last(a)).isBlack!=info(Sol.gamedata.stacks[t][e]).isBlack){console.log("Hint: Move card from column "+(t-5)+" (depth "+(Sol.gamedata.stacks[t].length-e)+") to column "+(a-5)),Sol.cardstate.possibleMove=!0;break}}if(!Sol.cardstate.possibleMove&&(0<Sol.gamedata.stacks[0].length||0<Sol.settings.cycleTimes)?(console.log("Hint: Shuffle deck"),Sol.cardstate.possibleMove=!0):Sol.cardstate.possibleMove||console.log("Hmm. It seems there are no more possible moves.\nConsider starting a new game."),!Sol.cardstate.autoCompletable&&0===Sol.gamedata.stacks[0].length&&Sol.gamedata.stacks[1].length<2&&0<Sol.gamedata.stacks[2].length&&0<Sol.gamedata.stacks[3].length&&0<Sol.gamedata.stacks[4].length&&0<Sol.gamedata.stacks[5].length){Sol.cardstate.autoCompletable=!0;for(var s=0;s<Sol.gamedata.stacks.length;s++)for(var o=0;o<Sol.gamedata.stacks[s].length;o++)52<=Sol.gamedata.stacks[s][o]&&(Sol.cardstate.autoCompletable=!1);Sol.cardstate.autoCompletable&&document.getElementsByClassName("autocomplete")[0].classList.toggle("autocomplete--visible")}Sol.gamedata.stacks[2].length+Sol.gamedata.stacks[3].length+Sol.gamedata.stacks[4].length+Sol.gamedata.stacks[5].length===52&&winGame()}function winGame(){stopTimer(),Sol.stats.score+=Math.floor(7e5/Sol.stats.gameTime),updateScore();var a=document.getElementsByClassName("statistics__content");Sol.stats.gameTime<Sol.stats.bestTime&&(Sol.stats.bestTime=Sol.stats.gameTime),Sol.stats.score>Sol.stats.bestScore&&(Sol.stats.bestScore=Sol.stats.score),a[0].innerHTML=Sol.stats.score,a[1].innerHTML=Sol.stats.bestScore,a[2].innerHTML=timeToString(Sol.stats.gameTime),a[3].innerHTML=timeToString(Sol.stats.bestTime),document.getElementsByClassName("statistics")[0].classList.toggle("modal--show")}function autoComplete(){var a=[Sol.gamedata.stacks[2][0],Sol.gamedata.stacks[3][0],Sol.gamedata.stacks[4][0],Sol.gamedata.stacks[5][0]],t=52-(Sol.gamedata.stacks[2].length+Sol.gamedata.stacks[3].length+Sol.gamedata.stacks[4].length+Sol.gamedata.stacks[5].length);Sol.stats.score+=t*Sol.scoring.tableauToFoundation;for(var e=0;e<Sol.gamedata.stacks.length;e++)Sol.gamedata.stacks[e]=[];for(var s=0;s<13;s++)for(var o=0;o<4;o++)addElement(s+a[o],o+2);clearDom(),rebaseDom(),checkConditions()}function clone(a){n=[];for(var t=0;t<a.length;t++)n.push([]);for(var e=0;e<a.length;e++)for(var s=0;s<a[e].length;s++)n[e].push(a[e][s]);return n}function last(a){return Sol.gamedata.stacks[a][Sol.gamedata.stacks[a].length-1]}function info(a){var t=!1;return 52<=a&&(a-=52,t=!0),{value:a%13,isBlack:26<=a,isFaceDown:t}}function timeToString(a){return(1<=a/3600?Math.floor(a/3600)+":":"")+(Math.floor(a/60)%60).toString().padStart(2,"0")+":"+(a%60).toString().padStart(2,"0")}function resetBoard(){stopTimer(),clearTimer(),Sol.settings.cycleTimes=2,Sol.stats.score=0,document.getElementById("stack0").classList.add("deck__stock--cycle"),document.getElementById("score").innerHTML=Sol.stats.score,document.getElementsByClassName("controls__icon--undo")[0].classList.remove("invalid");for(var a=Sol.gamedata.stacks.length-1;0<=a;a--)Sol.gamedata.stacks[a]=[];for(;Sol.gamedata.stacks[0].length<52;){var t=Sol.gamedata.stacks[0].length+52;Sol.gamedata.stacks[0].push(t)}for(var e,s,o=52;o;o--)e=Math.floor(Math.random()*o),s=Sol.gamedata.stacks[0][o-1],Sol.gamedata.stacks[0][o-1]=Sol.gamedata.stacks[0][e],Sol.gamedata.stacks[0][e]=s;for(var l=6;l<13;l++)for(var n=l-6;0<=n;n--)0==n?Sol.gamedata.stacks[l].push(Sol.gamedata.stacks[0].pop()-52):Sol.gamedata.stacks[l].push(Sol.gamedata.stacks[0].pop());clearDom(),rebaseDom(),checkConditions()}function clearDom(){for(var a=0;a<Sol.gamedata.stacks.length;a++)document.getElementById("stack"+a).innerHTML=""}function rebaseDom(){clearDom();for(var a=0;a<Sol.gamedata.stacks.length;a++)for(var t=0;t<Sol.gamedata.stacks[a].length;t++)document.getElementById("stack"+a).append(cardFromNumber(Sol.gamedata.stacks[a][t]))}function startTimer(){Sol.stats.timerStarted=!0,spanValue=document.getElementById("timer"),Sol.stats.timerInterval=setInterval(function(){Sol.stats.gameTime+=1,Sol.stats.gameTime%10==0&&(Sol.stats.score-=2,document.getElementById("score").innerHTML=Sol.stats.score),spanValue.innerHTML=1<=Sol.stats.gameTime/3600?Math.floor(Sol.stats.gameTime/3600)+":":Math.floor(Sol.stats.gameTime/60)%60+":"+(Sol.stats.gameTime%60).toString().padStart(2,"0")},1e3)}function stopTimer(){Sol.stats.timerStarted=!1,clearInterval(Sol.stats.timerInterval)}function clearTimer(){Sol.stats.gameTime=0,document.getElementById("timer").innerText="0:00"}function updateScore(){document.getElementById("score").innerHTML=Sol.stats.score}document.getElementById("board").className+=Sol.cardColors[Math.floor(Math.random()*Sol.cardColors.length)],document.body.addEventListener("click",function(a){a.target.parentNode.classList.contains("card")?cardInteraction(a.target.parentNode):a.target.classList.contains("tableau__column")&&handleEmptyFieldInteraction(a.target)}),document.getElementsByClassName("autocomplete")[0].addEventListener("click",autoComplete),document.getElementById("cycleButton").addEventListener("click",handleCycle),document.getElementsByClassName("controls__link--new-game")[0].addEventListener("click",resetBoard),document.getElementsByClassName("controls__link--undo")[0].addEventListener("click",handleUndo),document.getElementsByClassName("new-game")[0].addEventListener("click",function(){document.getElementsByClassName("statistics")[0].classList.toggle("modal--show"),resetBoard()}),document.onkeypress=function(a){switch(a.which){case 117:case 26:handleUndo();break;case 110:resetBoard()}},resetBoard();