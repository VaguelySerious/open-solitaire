function Modal(e,t,s){if(this.modal=document.getElementById(e),this.visibleClass=t,"string"==typeof s)for(var o=document.getElementsByClassName(s),a=0;a<o.length;a++)o[a].addEventListener("click",this.toggle.bind(this));else for(a=0;a<s.length;a++)document.getElementById(s[a]).addEventListener("click",this.toggle.bind(this))}function sprintf(e){var t=1,s=arguments;return e.replace(/%s/g,function(){return t<s.length?s[t++]:""})}SOL.stats={score:0,moves:0,started:!1,time:{now:0,interval:null},scores:[]},SOL.DOM={board:document.getElementById("board"),stacks:document.getElementsByClassName("stack"),undo:document.getElementById("undo"),newgames:document.getElementsByClassName("new-game"),autocomplete:document.getElementById("//TODO"),cycle:document.getElementById("//TODO"),timer:document.getElementById("printinfo"),score:document.getElementById("printinfo"),scoreboard:{gameScore:document.getElementById("scoreboard-score"),gameBonus:document.getElementById("scoreboard-bonus"),gameTotal:document.getElementById("scoreboard-total"),gameTime:document.getElementById("scoreboard-time"),highScore:document.getElementById("scoreboard-highscore"),gamesCount:document.getElementById("scoreboard-gamesCount"),gamesWonCount:document.getElementById("scoreboard-gamesWonCount")}},SOL.cardColors=["yellow","orange","red","purple","lavender","blue","aqua"],Modal.prototype.toggle=function(){this.modal.classList.toggle(this.visibleClass)},SOL.generate=function(e){return sprintf(SOL.template,e.value,e.color,e.facedown?"facedown":"",e.id)},SOL.lookup=function(e){var t,s;for(t=0;t<SOL.game.stacks.length;t++)for(s=0;s<SOL.game.stacks[t].length;s++)if(SOL.game.stacks[t][s]&&SOL.game.stacks[t][s].id===e)return{card:SOL.game.stacks[t][s],stack:t,pos:s};throw new Error("Lookup could not find the card by ID")},SOL.push=function(e,t){SOL.generate(t);SOL.game.stacks[e].push(t),SOL.DOM.stacks[e].insertAdjacentHTML("beforeend",SOL.generate(t))},SOL.pop=function(e){var t=SOL.DOM.stacks[e].childNodes;if(0<SOL.game.stacks[e].length&&0<t.length)return SOL.DOM.stacks[e].removeChild(t[t.length-1]),SOL.game.stacks[e].pop();throw new Error("Cannot pop empty stack")},SOL.move=function(e,t,s,o,a){var n,r=[];for(n=0;n<s;n++)r.push(SOL.pop(e)),o&&(r[n].facedown=!r[n].facedown);for(n=0;n<s;n++)a?SOL.push(t,r.shift()):SOL.push(t,r.pop());return null!=r[r.length-1]},SOL.new=function(){var e=[],t="",s=0,o=!0;SOL.stats.started&&SOL.addStats(!1),SOL.stats.time.reset(),SOL.stats.started=!1,SOL.stats.moves=0,SOL.stats.score=0,SOL.game.cycleTimes=SOL.game.maxCycleTimes,SOL.DOM.undo.setAttribute("disabled","true"),SOL.DOM.stacks[0].classList.remove("error"),document.cookie="gamestate=;";for(var a=0,n=SOL.game.cards;a<n;a++)e.push({id:a,color:SOL.game.colors[a%SOL.game.colors.length],value:a%13,facedown:!0});for(var r=0;r<SOL.game.stacks.length;r++)SOL.game.stacks[r]=[];SOL.clear(),SOL.shuffle(e);for(a=0,n=SOL.game.distribution.length;a<n;a++)if(/[0-9]/.test(SOL.game.distribution[a]))t+=SOL.game.distribution[a];else{switch(SOL.game.distribution[a]){case"/":s++;break;case"u":o=!1;case"d":for(j=0;j<+t;j++){var c=e.pop();c.facedown=o,SOL.push(s,c)}o=!0;break;default:throw new Error("Invalid fen string for cards distribution")}t=""}},SOL.clear=function(){for(var e=0;e<SOL.DOM.stacks.length;e++)SOL.DOM.stacks[e].innerHTML=""},SOL.rebuild=function(){SOL.clear();for(var e=0;e<SOL.DOM.stacks.length;e++)for(var t=0;t<SOL.game.stacks[e].length;t++){var s=SOL.generate(SOL.game.stacks[e][t]);SOL.DOM.stacks[e].insertAdjacentHTML("beforeend",s)}},SOL.undo=function(){if(!(0<SOL.game.history.length))throw new Error("Undo unavailable");var e=JSON.parse(SOL.game.history.pop());SOL.stats.moves+=1,SOL.game.stacks=e.stacks,SOL.stats.score=e.score+SOL.scoring.undo,SOL.rebuild(),SOL.game.history.length<=0&&SOL.DOM.undo.setAttribute("disabled","true")},SOL.save=function(){SOL.stats.started||(SOL.stats.time.start(),SOL.stats.started=!0),SOL.stats.moves+=1;var e=JSON.stringify({score:SOL.stats.score,time:SOL.stats.time.now,moves:SOL.stats.moves,stacks:SOL.game.stacks,cycleTimes:SOL.game.cycleTimes});SOL.game.history.push(e),document.cookie="gamestate="+e+";",document.cookie="stats="+JSON.stringify(SOL.stats.scores)+";",SOL.game.history.length>SOL.game.maxGameStates&&SOL.game.history.shift(),1<=SOL.game.history.length&&SOL.game.history[SOL.game.history.length-1]!==SOL.game.stacks&&SOL.DOM.undo.removeAttribute("disabled")},SOL.win=function(){SOL.addStats(!0),SOL.stats.time.stop(),SOL.modal_score.toggle(),document.cookies="gamestate=;";for(var e=0,t=SOL.stats.scores.length,s=0,o=1e8,a=0;a<SOL.stats.scores;a++)SOL.stats.scores[a].score,e+=SOL.stats.scores[a].wasWin,SOL.stats.score[a].score>s&&(s=SOL.stats.scores[a].score),SOL.stats.score[a].time.now<o&&(o=SOL.stats.scores[a].time.now);SOL.DOM.scoreboard.gameScore.textContent=SOL.stats.score,SOL.DOM.scoreboard.gameBonus.textContent=Math.round(SOL.scoring.timeBonus/SOL.stats.time.now),SOL.DOM.scoreboard.gameTotal.textContent=SOL.stats.score+Math.round(SOL.scoring.timeBonus/SOL.stats.time.now),SOL.DOM.scoreboard.gameTime.textContent=(1<=SOL.stats.time.now/3600?Math.floor(SOL.stats.time.now/3600)+":":"")+(Math.floor(SOL.stats.time.now/60)%60).toString().padStart(2,"0")+":"+(SOL_cookie_save.stats.time.now%60).toString().padStart(2,"0"),SOL.DOM.scoreboard.highScore.textContent=s,SOL.DOM.scoreboard.gamesCount.textContent=t,SOL.DOM.scoreboard.gamesWonCount.textContent=e},SOL.addStats=function(e){e=e||!1;SOL.stats.scores.push({score:SOL.stats.score+SOL.scoring.timeBonus/SOL.stats.time.now,time:SOL.stats.time.now,moves:SOL.stats.moves,wasWin:e})},SOL.differentColor=function(e,t){return 1<SOL.game.colors.indexOf(e)&&SOL.game.colors.indexOf(t)<2||SOL.game.colors.indexOf(e)<2&&1<SOL.game.colors.indexOf(t)},SOL.highlight=function(e){document.getElementById(e.card.id).classList.add("clicked")},SOL.dehighlight=function(e){document.getElementById(e.card.id).classList.remove("clicked")},SOL.stats.updateScore=function(e,t){"number"==typeof t?this.score=t:this.score+=e},SOL.DOM.updateTime=function(e){},SOL.stats.time.start=function(){this.timer=setInterval(function(){SOL.stats.time.now+=1,SOL.stats.time.now%10==0&&SOL.stats.updateScore(SOL.scoring.afterTenSeconds),SOL.DOM.updateTime(SOL.stats.time.now)},1e3)},SOL.stats.time.stop=function(){clearInterval(this.timer),this.timer=null},SOL.stats.time.reset=function(){SOL.stats.time.now=0,SOL.DOM.updateTime(0)},SOL.template='<div class="card card-%s %s %s" id="%s"><div class="card__front"><span class="card__values"></span></div><div class="card__back"></div></div>',SOL.shuffle=function(e){var t,s,o;for(o=e.length-1;0<o;o--)t=Math.floor(Math.random()*(o+1)),s=e[o],e[o]=e[t],e[t]=s},SOL.modal_menu=new Modal("menu","visible","menu-toggle"),SOL.modal_help=new Modal("help","visible","help-toggle"),SOL.modal_score=new Modal("scoreboard","visible","score-toggle"),SOL.modal_cookie=new Modal("cookie","hidden","cookie-toggle"),document.body.addEventListener("click",function(e){e.target.classList.contains("card")?SOL.clickCard(SOL.lookup(+e.target.id)):e.target.classList.contains("stack")&&SOL.clickStack(+e.target.id.slice(e.target.id.indexOf("-")+1))}),SOL.DOM.undo.addEventListener("click",function(){SOL.undo()});for(var i=0;i<SOL.DOM.newgames.length;i++)SOL.DOM.newgames[i].addEventListener("click",function(){SOL.new()});function parseCookieStringAsJson(e){for(var t={},s=0,o=null,a=0;a<e.length;a++)"="===e[a]?(t[o=e.slice(s,a)]=null,s=a+1):";"===e[a]?(t[o]=JSON.parse(e.slice(s,a)),s=a+2,o=null):a===e.length-1&&null!==o&&(t[o]=JSON.parse(e.slice(s)));return t}document.onkeypress=function(e){switch(e.which){case 26:case 85:SOL.undo();break;case 110:SOL.new();break;case 104:SOL.modal_help.toggle();break;case 109:SOL.modal_menu.toggle();break;case 115:SOL.modal_score.toggle()}},document.body.className+=SOL.cardColors[Math.floor(Math.random()*SOL.cardColors.length)];var SOL_cookie_save=parseCookieStringAsJson(document.cookie);SOL_cookie_save.scores&&(SOL.stats.scores=SOL_cookie_save.scores),SOL_cookie_save.gamestate?(SOL.game.stacks=SOL_cookie_save.gamestate.stacks,SOL.game.cycleTimes=SOL_cookie_save.gamestate.cycleTimes,SOL.stats.score=SOL_cookie_save.gamestate.score,SOL.stats.time.now=SOL_cookie_save.gamestate.time,SOL.stats.moves=SOL_cookie_save.gamestate.moves,SOL.stats.started=!0,SOL.game.cycleTimes<=0&&SOL.DOM.stacks[0].classList.add("error"),SOL.stats.time.start(),SOL.rebuild()):SOL.new();