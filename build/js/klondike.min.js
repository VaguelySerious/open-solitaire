var SOL={game:{maxGameStates:1,progressiveUndo:1,maxCycleTimes:2,cycleTimes:2,cards:52,colors:["hearts","diamonds","clubs","spades"],stacks:[[],[],[],[],[],[],[],[],[],[],[],[],[]],distribution:"24d//////1u/1d1u/2d1u/3d1u/4d1u/5d1u/6d1u",history:[],activeCard:null,possibleMove:!0,autoCompletable:!1},scoring:{pileToTableau:5,tableauToFoundation:10,undo:-10,foundationToTableau:-15,uncoverFaceDown:5,afterTenSeconds:-2},clickCard:function(e){if(0===e.stack)console.log("Deck cycle"),SOL.game.stacks[0].length<3?SOL.move(0,1,SOL.game.stacks[0].length,!0,!0):SOL.move(0,1,3,!0,!0),SOL.deselectLast(),setTimeout(SOL.save,0);else if(e.card.facedown)console.log("Uncover facedown"),SOL.stats.updateScore(SOL.scoring.uncoverFaceDown),e.card.facedown=!1,document.getElementById(e.card.id).classList.remove("facedown"),SOL.deselectLast(),setTimeout(SOL.save,0);else if(null===SOL.game.activeCard)SOL.game.activeCard=e,SOL.highlight(e),console.log("Only select card");else if(SOL.game.activeCard.card===e.card){if(0===SOL.game.activeCard.card.value){for(var a=2;a<6;a++)if(0===SOL.game.stacks[a].length){SOL.move(SOL.game.activeCard.stack,a,1),console.log("Move to empty foundation doubleclick"),setTimeout(SOL.save,0);break}}else for(a=2;a<6;a++)if(0!==SOL.game.stacks[a].length){var c=SOL.game.stacks[a][SOL.game.stacks[a].length-1];if(console.log("lastcard: "+JSON.stringify(c)),SOL.game.activeCard.card.value===c.value+1&&SOL.game.activeCard.card.color===c.color){console.log("Move to non-empty foundation double-click"),SOL.move(SOL.game.activeCard.stack,a,1),setTimeout(SOL.save,0);break}}SOL.deselectLast()}else SOL.highlight(e),SOL.game.activeCard.card.value===e.card.value-1&&SOL.differentColor(SOL.game.activeCard.card.color,e.card.color)&&5<e.stack?(console.log("Normal move card"),SOL.move(SOL.game.activeCard.stack,e.stack,SOL.game.stacks[SOL.game.activeCard.stack].length-SOL.game.activeCard.pos),setTimeout(SOL.save,0)):SOL.game.activeCard.card.value===e.card.value+1&&SOL.game.activeCard.card.color===e.card.color&&1<e.stack&&e.stack<6?(console.log("Move to non-empty (default)"),SOL.move(SOL.game.activeCard.stack,e.stack,1),setTimeout(SOL.save,0)):console.log("Two-card interaction failure"),setTimeout(function(){SOL.deselectLast(),SOL.dehighlight(e)},300);SOL.check()},clickStack:function(e){console.log(e),0===e?(console.log("Cycled deck"),0<SOL.game.cycleTimes&&(SOL.move(1,0,SOL.game.stacks[1].length,!0,!0),SOL.game.cycleTimes-=1,SOL.game.cycleTimes<=0&&SOL.DOM.stacks[0].classList.add("error")),SOL.save()):SOL.game.activeCard&&0===SOL.game.activeCard.card.value&&1<e&&e<6?(console.log("Move card to foundation"),SOL.move(SOL.game.activeCard.stack,e,1),SOL.save()):SOL.game.activeCard&&12===SOL.game.activeCard.card.value&&5<e?(SOL.move(SOL.game.activeCard.stack,e,SOL.game.stacks[SOL.game.activeCard.stack].length-SOL.game.activeCard.pos),SOL.save()):console.log("Failed empty stack interaction"),setTimeout(function(){SOL.deselectLast()},300)},check:function(){for(var e=!0,a=2;a<6;a++)if(SOL.game.stacks[a].length<13){e=!1;break}e&&SOL.win()},complete:function(){SOL.rebuild()},deselectLast:function(){null!==SOL.game.activeCard&&(SOL.dehighlight(SOL.game.activeCard),SOL.game.activeCard=null)}};