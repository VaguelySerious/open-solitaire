function cardFromNumber(a){(null==a||isNaN(a))&&alert("cardFromNumber(null) was called");var e=[];classNames=["card card--"+colors[Math.floor(a%52/13)]+" card--"+a%13+(a<52?"":" card--back"),"card__front","card__color","card__color","card__back"];for(var t=0;t<classNames.length;t++)e.push(document.createElement("div")),e[t].className+=classNames[t],0!=t&&e[2==t||3==t?1:0].appendChild(e[t]);return e[0]}function numFromCard(a){var e=a.className.split(" "),t=13*colors.indexOf(e[1].slice(6));return t+=+e[2].slice(6),"card--back"===e[3]&&(t+=52),t}function findCardPos(a){if(null==a)return null;for(var e=numFromCard(a),t=0;t<stacks.length;t++)for(var s=0;s<stacks[t].length;s++)if(stacks[t][s]===e)return[t,s,e];return alert("ERROR: Card can't be found in any stack."),null}function deckCycle(){return addElement(removeElement(0),1,!0,!1),stacks[0].length}function addElement(a,e,t,s){if(null==a||isNaN(a))return null;s|=!1,(t|=!1)&&(a>=52?a-=52:a+=52),s?(stacks[e].unshift(a),$("#stack"+e).prepend(cardFromNumber(a))):(stacks[e].push(a),$("#stack"+e).append(cardFromNumber(a)))}function removeElement(a){if(null!=a){if(children=$("#stack"+a).children("div"),0==children.length)return null;children[children.length-1].remove()}return stacks[a].pop()}function moveElements(a,e,t){for(var s=[],l=0;l<t;l++)s.push(removeElement(a));for(var r=s.length-1;r>=0;r--)addElement(s[r],e)}function cardInteraction(a){var e=findCardPos(a);if(numFromCard(a)==stacks[0][stacks[0].length-1])createGameState(),deckCycle(),null!=lastCard&&forgetLastCard();else if(numFromCard(a)>=52)null!=lastCard&&forgetLastCard(),e[1]==stacks[e[0]].length-1&&(createGameState(),stacks[e[0]][e[1]]=numFromCard(a)-52,$(a).toggleClass("card--back"));else if(null==lastCard)$(a).toggleClass("card--clicked"),lastCard=a;else{var t=findCardPos(lastCard),s=numFromCard(a),l=numFromCard(lastCard);$(a).toggleClass("card--clicked"),lastCard!=a&&e[0]>=2?l%13+1==s%13&&(s>=26&&l<26||s<26&&l>=26)||l-1===s&&e[0]>1&&e[0]<6?(createGameState(),moveElements(t[0],e[0],stacks[t[0]].length-t[1])):(console.log("Clicked two incompatible cards"),$(lastCard).toggleClass("card--flash"),$(a).toggleClass("card--flash"),setTimeout(function(){$(a).toggleClass("card--flash"),$(lastCard).toggleClass("card--flash")},500)):console.log("Clicked same card twice"),setTimeout(function(){$(a).toggleClass("card--clicked"),$(lastCard).toggleClass("card--clicked"),lastCard=null},500)}stacks[2].length+stacks[3].length+stacks[4].length+stacks[5].length===52&&alert("CONGRATULATIONS, YOU WON!")}function forgetLastCard(){$(lastCard).hasClass("card--clicked")&&$(lastCard).toggleClass("card--clicked"),lastCard=null}function handleEmptyFieldInteraction(a){var e=a.id.slice(5),t=findCardPos(lastCard);null!=lastCard&&0===stacks[e].length&&e>1&&((e>5&&numFromCard(lastCard)%13==12||numFromCard(lastCard)%13==0)&&(createGameState(),moveElements(t[0],parseInt(e),stacks[t[0]].length-t[1])),$(lastCard).toggleClass("card--clicked"),lastCard=null)}function handleCycle(){if(cycleTimes>0){createGameState(),temp=stacks[1].length;for(var a=0;a<temp;a++)addElement(removeElement(1),0,!0,!1);0==(cycleTimes-=1)&&$("#stack0").toggleClass("deck__stock--cycle")}}function createGameState(){gameStates.push(clone(stacks)),console.log("Created gamestate."),gameStates.length>maxGameStates&&(gameStates.shift(),console.log("shifted gamestate"))}function handleUndo(){console.log("Clicked undo."),progressiveUndo||(console.log("decreased max Game states"),maxGameStates-=1),gameStates.length>0?(stacks=gameStates.pop(),clearDom(),rebaseDom(),console.log("Reverted gamestate. "+gameStates.length+" gameStates and "+maxGameStates+" max game states.")):alert("No gamestates remaining.")}function clone(a){n=[];for(var e=0;e<a.length;e++)n.push([]);for(var t=0;t<a.length;t++)for(var s=0;s<a[t].length;s++)n[t].push(a[t][s]);return n}function resetBoard(){timerReset(),0==cycleTimes&&$("#stack0").toggleClass("deck__stock--cycle"),cycleTimes=2,$("#score").text(score);for(var a=stacks.length-1;a>=0;a--)stacks[a]=[];for(;stacks[0].length<cardAmount;){var e=stacks[0].length+52;stacks[0].push(e)}for(var t,s,l=cardAmount;l;l--)t=Math.floor(Math.random()*l),s=stacks[0][l-1],stacks[0][l-1]=stacks[0][t],stacks[0][t]=s;for(var r=6;r<13;r++)for(var c=r-6;c>=0;c--)0==c?stacks[r].push(stacks[0].pop()-52):stacks[r].push(stacks[0].pop());clearDom(),rebaseDom()}function clearDom(){for(var a=0;a<stacks.length;a++)$("#stack"+a).empty()}function rebaseDom(){clearDom();for(var a=0;a<stacks.length;a++)for(var e=0;e<stacks[a].length;e++)$("#stack"+a).append(cardFromNumber(stacks[a][e]))}var stacks=[[],[],[],[],[],[],[],[],[],[],[],[],[]],gameStates=[],maxGameStates=1,progressiveUndo=!0,cardAmount=52,lastCard=null,cycleTimes=2,score=0,colors=["hearts","diamonds","clubs","spades"];resetBoard(),$("body").on("click",".card",function(){cardInteraction(this)}),$(".card-placeholder").click(function(){handleEmptyFieldInteraction(this)}),$("#cycleButton").click(function(){handleCycle()}),$(".controls__link--new-game").click(function(){resetBoard()}),$(".controls__link--undo").click(function(){handleUndo()});